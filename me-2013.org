* 2013
** 01-01
*** DONE 设计bad-rails
*** 阅读HTTP权威指南
** 01-02
*** DONE 阅读HTTP权威指南
*** 开发iOS应用Step
** 01-03
*** DONE 阅读HTTP权威指南
*** TODO 开发iOS应用Step
**** 创建活动
**** 在主面板显示活动列表
**** 创建与活动相关的步骤
** 01-04
*** wlts(沃伦特斯)渠道接入
**** DONE 订单结果查询活动
**** 处理订单查询返回活动
**** 支付活动
**** 处理支付返回活动
**** 参数配置
*** 追号多渠道
**** DONE 活动分析
**** DONE 时间估计
**** DONE A_渠道选择(排序)
*** 买一个皮夹子
** 01-05
*** DONE 分批取追号记录
*** DONE 定义bcode(dealerid1@:code1@\ndealerid2@:code2)
*** DONE prebets表添加bcode字段
*** DONE auto_bets对象添加bcode存取器
*** DONE 分组追号记录
*** DONE 金软批量投注
** 01-06
*** DONE 分组追号记录涉及彩种开关时间
*** 华彩
**** DONE 研究华彩文档
**** TODO 华彩批量投注
**** DONE 华彩参数配置
*** 处理渠道投注结果
*** 投注入库
** 01-07
*** 华彩
**** DONE 华彩批量投注
**** 处理华彩批量投注返回
*** 处理渠道投注结果
*** 投注入库
** 01-08
*** DONE 查看大乐透追号
*** 华彩
**** DONE 处理华彩批量投注返回
**** DONE 华彩成功响应
**** DONE 华彩失败响应
**** DONE 华彩投注入库
*** DONE 处理金软投注响应
*** DONE 金软投注入库
** 01-09
*** 追号
**** TODO 追号前的准备业务
***** DONE A_同步新期
***** DONE A_创建预建彩期
***** DONE A_检查漏追
***** DONE A_处理漏追
***** 入库过期彩期
**** 追号业务
**** 金软集成测试
**** 华彩集成测试
** 01-10
*** DONE 入库过期彩期
*** DONE 追号前的业务
*** TODO 追号业务
*** 金软集成测试
*** 华彩集成测试
** 01-11
*** DONE 金软集成测试
*** 华彩集成测试
** 01-12
*** DONE 追号程序
*** Next Step
** 01-13
*** DONE 学习Prolog
*** 阅读HTTP权威指南
*** 阅读编写可读代码的艺术
** 01-14
*** DONE 获取tickets_info中的投注数据，向金软投注
*** 多渠道追号QA测试
**** case 1 tickets_info只有金软渠道的投注数据
应该往金软投注，追号成功     
**** TODO case 2 tickets_info只有华彩渠道的投注数据
应该往华彩投注，追号成功
**** case 3 tickets_info有华彩和金软的投注数据
应该往华彩投注，追号成功
**** case 4 tickets_info有金软和华彩的投注数据
应该往华彩投注，追号成功
**** case 5, tickets_info有金软和华彩的投注数据，但是华彩的彩期时间关闭
应该往金软投注，追号成功
**** case 6, tickets_info没有任何投注数据
应该往金软投注，追号成功
*** DONE 追号程序备份，删除不需要的程序文件
** 01-15
*** DONE 升级rails至3.2.11
*** 多渠道追号QA测试
**** case 1 tickets_info只有金软渠道的投注数据
应该往金软投注，追号成功     
**** TODO case 2 tickets_info只有华彩渠道的投注数据
应该往华彩投注，追号成功
**** case 3 tickets_info有华彩和金软的投注数据
应该往华彩投注，追号成功
**** case 4 tickets_info有金软和华彩的投注数据
应该往华彩投注，追号成功
**** case 5, tickets_info有金软和华彩的投注数据，但是华彩的彩期时间关闭
应该往金软投注，追号成功
**** case 6, tickets_info没有任何投注数据
应该往金软投注，追号成功
*** DONE 升级mac mini硬件
** 01-16
*** DONE 继承自Business的类，自动生成类名方法
      def inherited(subclass)
        method_name = subclass.to_s.sub("BAD::", '')
        Main.instance_eval {
          define_method method_name do |data = {}, &block|
            subclass.start(data, &block)
          end
        }
      end

*** 多渠道追号QA测试
**** case 1 tickets_info只有金软渠道的投注数据
应该往金软投注，追号成功     
**** TODO case 2 tickets_info只有华彩渠道的投注数据
应该往华彩投注，追号成功
**** case 3 tickets_info有华彩和金软的投注数据
应该往华彩投注，追号成功
**** case 4 tickets_info有金软和华彩的投注数据
应该往华彩投注，追号成功
**** case 5, tickets_info有金软和华彩的投注数据，但是华彩的彩期时间关闭
应该往金软投注，追号成功
**** case 6, tickets_info没有任何投注数据
应该往金软投注，追号成功
*** DONE 海中文档
*** 海中渠道接入
**** DONE 出票请求处理
**** DONE 出票响应处理
**** DONE 海中渠道集成到追号业务     
** 01-17
*** DONE 研究一下run_once
*** 测试脚本
**** DONE 抓新期
**** DONE 生成追号记录    
**** java那边加上last_issue值
*** 多渠道追号QA测试
**** DONE case 1 tickets_info只有金软渠道的投注数据
应该往金软投注，追号成功     
**** DONE case 2 tickets_info只有华彩渠道的投注数据
应该往华彩投注，追号成功
**** case 3 tickets_info有华彩和金软的投注数据
应该往华彩投注，追号成功
**** case 4 tickets_info有金软和华彩的投注数据
应该往华彩投注，追号成功
**** case 5, tickets_info有金软和华彩的投注数据，但是华彩的彩期时间关闭
应该往金软投注，追号成功
**** case 6, tickets_info没有任何投注数据
应该往金软投注，追号成功
**** TODO case 7, tickets_info只有海中的投注数据
应该往海中投注，追号成功
** 01-18
*** DONE java那边加上last_issue值
*** DONE 补last_issue
*** DONE 去掉LotTable,直接从数据库取彩种
*** DONE 彩种排序，高频彩放在最前
*** DONE 如果没有追号记录，对彩期做入库操作
*** DONE 评审追号测试用例
*** DONE 高频彩投注重试队列
*** 多渠道追号QA测试
**** DONE case 1 tickets_info只有金软渠道的投注数据
应该往金软投注，追号成功     
**** DONE case 2 tickets_info只有华彩渠道的投注数据
应该往华彩投注，追号成功
**** DONE case 7, tickets_info只有海中的投注数据
应该往海中投注，追号成功   

**** case 3 tickets_info有华彩和金软的投注数据
应该往华彩投注，追号成功
**** case 4 tickets_info有金软和华彩的投注数据
应该往华彩投注，追号成功
**** case 5, tickets_info有金软和华彩的投注数据，但是华彩的彩期时间关闭
应该往金软投注，追号成功
**** case 6, tickets_info没有任何投注数据
应该往金软投注，追号成功

** 01-19
*** TODO 博客: 使用BAD,直面我们的业务和流程
** 01-20
** 01-21
*** 多渠道追号QA测试
*** 博客
*** DONE 追号过程中，如果彩期过期，则跳过投注，申请退款
*** 追号性能测试
**** DONE 华彩 1000: 209s, 3000: 508s
**** TODO 金软 1000:  
**** 京拓
*** 慢频彩和高频彩分开时段跑
** 01-22
*** DONE 慢频彩和高频彩分开时段跑
*** 追号性能测试
**** DONE 2线程，华彩, 1000: 209s, 3000: 508s
**** DONE 4线程，华彩, 1000: , 3000: 500s   
**** TODO 4线程, 金软 1000:  222s
**** 京拓
*** 单进程直接投注业务
*** 快频彩处理漏追也需要多进程
*** 先生产持久化的投注注记录，再去投注, 然后根据投注响应更新投注记录
将投注记录丢到投注队列，从投注队列取投注记录投注，将投注结果丢到响应队列，从响应队列取投注结果更新投注记录    
** 01-23
*** 单进程直接投注业务
*** 快频彩处理漏追也需要多进程
*** 先生产持久化的投注注记录，再去投注, 然后根据投注响应更新投注记录
将投注记录丢到投注队列，从投注队列取投注记录投注，将投注结果丢到响应队列，从响应队列取投注结果更新投注记录    
*** 多渠道追号QA测试
**** DONE 金软: 重庆时时彩[大小单双]
**** DONE 金软: 重庆时时彩[一星]
**** DONE 金软: 重庆时时彩[二星]
**** DONE 金软: 重庆时时彩[三星]
**** DONE 金软: 重庆时时彩[五星]
**** DONE 金软: 福利彩3D[组三]
**** DONE 金软: 福利彩3D[组六]
**** DONE 金软: 福利彩3D[直选]
**** DONE 金软: 排列三[组三]
**** DONE 金软: 排列三[组六]
**** DONE 金软: 排列三[直选]
**** DONE 金软: 大乐透
**** DONE 金软: 双色球
** 01-24
*** 多渠道追号QA测试
**** DONE 华彩: 重庆时时彩[大小单双]
**** DONE 华彩: 重庆时时彩[一星]
**** DONE 华彩: 重庆时时彩[二星]
**** DONE 华彩: 重庆时时彩[三星]
**** DONE 华彩: 重庆时时彩[五星]
**** 华彩: 大乐透
**** 测试用例测试
***** DONE 返点排序
***** DONE 彩种时间排序
***** TODO 华彩重试
** 01-25
*** 多渠道QA测试
**** DONE 华彩大乐透
**** TODO 华彩大乐透重试,重试队列有问题
**** DONE 金软双色球重试
** 01-28
*** 多渠道QA测试
**** DONE 华彩大乐透重试,重试队列有问题
**** DONE 华彩时时彩批量投注
**** DONE 华彩彩期开始时间延迟70s
**** TODO 华彩时时彩重试
**** 华彩生产环境配置
** 01-29
*** 多渠道QA测试
**** 华彩生产环境配置
*** DONE 多渠道QA测试结束
*** 年关彩期停售脚本
*** TODO 第三方支付后台查询
**** 支付订单查询
**** 储值帐户资金变动查询
** 01-30
*** 年关彩期停售脚本
*** DONE 第三方支付后台查询
**** DONE 从QA环境拉一批数据到本地
**** DONE 支付订单查询
**** TODO 储值帐户资金变动查询
** 01-31
*** DONE 年关彩期停售脚本
***  第三方支付后台查询
**** TODO 储值帐户资金变动查询
** 02-01
*** TODO 年关彩期处理
*** DONE 七乐彩预期彩期生成
*** DONE 储值帐户资金变动查询
** 02-02
*** DONE 阅读:领域驱动设计
*** 相术:基于汉字的符号系统
** 02-04
*** DONE 信用卡还帐
*** 第三方支付后台查询
*** DONE 华彩订单号去掉agentid
*** DONE 已开奖彩期, 更改其投注订单状态为未中奖或已中奖
*** 对中奖订单进行返奖
** 02-05
*** DONE 第三方支付后台查询
*** 活动图 
** 02-06
*** 第三方支付查询
**** DONE 分页 30/page
**** DONE 表格样式
**** DONE 页面标题 第三方支付查询
**** DONE 储值帐户查询 增加电话查询
** 02-07
*** DONE 返奖
**** DONE 订单状态改为购彩成功(1)
**** DONE 返奖,状态应该变为购彩成功(9)
***** DONE 拼接头部报文
***** 拼接正文报文
*** TODO 相对url解决方法
*** DONE 大乐透追号订单号修复
**** DONE 设置为购单成功
**** DONE 去掉订单号中的渠道标识符
** 02-08
*** DONE 相对url解决方法
** 02-09
*** DONE 博客样式调整
*** 阅读rack源代码
** 02-10
*** 博客:直面我们的业务和流程
*** DONE 读书:代码简洁之道
** 02-11
*** DONE 读书:代码整洁之道
*** DONE 博客:我们需要直面业务和流程
** 02-12
*** DONE 读书:代码整洁之道 P100
*** DONE 博客:我们需要直面业务和流程

** 02-13
*** DONE 读书:代码整洁之道
*** 博客:我们需要直面业务和流程

** 02-14
*** DONE 读书:代码整洁之道
*** DONE 博客:我们需要直面业务和流程

** 02-15
*** DONE 读书:代码整洁之道
*** DONE 博客:我们需要直面业务和流程
** 02-16
*** DONE 追号: 华彩订单去掉渠道标识
*** DONE 第三方支付后台查询，导入生产数据到QA环境
*** DONE 第三方支付后台查询增加登陆验证功能
*** TODO 第三方支付后台查询部署
*** DONE 彩票小商户平台: 熟悉site map
*** gem: rack
** 02-17
*** DONE 追号: 去掉华彩订单号agent id
*** DONE 追号: 更新华彩订单状态
*** DONE 第三方支付后台查询部署
*** TODO 手机充值后台: 客户订单管理页面优化
**** 客户订单管理--页面下部增加翻页功能
**** 客户订单管理--订单详情增加背景颜色，以便与订单区分开
**** DONE 客户订单管理--高级选项格式修改
**** 客户订单管理--页面下部增加左右滚动条
*** TODO 导入话费QA数据
*** DONE 追号部署
** 02-18
*** 手机充值后台: 客户订单管理页面优化
**** DONE 将QA数据导入到本地库
**** DONE 客户订单管理--页面下部增加翻页功能
**** DONE 客户订单管理--订单详情增加背景颜色，以便与订单区分开
**** DONE 客户订单管理--高级选项格式修改
**** DONE 客户订单管理--页面下部增加左右滚动条
*** DONE 项目交接
*** 小商户
** 02-19
*** DONE 项目交接: PaidPortal各接口测试
*** DONE PaidPortal QA部署
*** TODO 彩票小商户
** 02-20
*** DONE 审核PaidPortal测试用例子
*** DONE PaidPortal QA测试
*** 充值后台优化部署
*** TODO 测试用例管理系统
** 02-21
*** DONE 买24号火车票
*** DONE 彩票小商户
*** DONE Spreadsheet: 拆分单元格
*** TODO PaidPortal需求
** 02-22
*** DONE 小商户数据库配置
*** 商户注册
**** DONE 路由设计和实现
**** DONE 模块设计和实现
**** DONE 控制器设计和实现
**** DONE 表结构设计和实现
**** DONE 活动设计和实现
**** DONE 活动测试
**** DONE 简单注册页面实现
**** DONE 线上view实现
**** AccountCenter注册商户
**** 验证码
**** 出错信息显示
*** 商户登陆
*** 用户注册
*** 储值
** 02-25
*** 商户注册
**** DONE AccountCenter注册商户
**** 验证码
**** DONE 出错信息显示
*** TODO 商户登陆
*** 用户注册
*** 储值
** 02-26
*** 商户注册
**** DONE 商户和手机号绑定
**** TODO 保存UserToken
**** 验证码
*** DONE 商户登陆
*** QueryTokenParser
*** 用户注册
*** TODO 储值
*** 彩票追号: 京拓渠道追号QA测试
** 02-27
*** 商户注册
**** 保存UserToken
**** DONE 验证码
*** DONE QueryTokenParser
*** 用户注册
*** DONE 储值
*** TODO 彩票追号: 京拓渠道追号QA测试
** 02-28
*** TODO 彩票追号: 京拓渠道追号QA测试
*** 彩票小商户: 用户注册
*** DONE Blog: Captcha
** 03-01
*** DONE 欧飞查询订单
*** 彩票小商户: 用户注册
*** 彩票追号: 京拓测试
*** DONE 合作网CoopShare: 基于Rabel进行开发
*** gem: activity
** 03-02
*** CoopShare: 发起一个合作:金额，人数，共享方式
** 03-03
*** DONE 休息
*** CoopShare: 提交合作项目
** 03-04
*** DONE 话费2: 重试队列增加省份和地区
*** DONE 话费2: 增加立即重试
*** 彩票追号: QA测试
*** CoopShare: 提交合作项目
** 03-05
*** DONE 话费2: 增加运营商显示
*** DONE 彩票追号: QA测试
- DONE hz: 排列三 
- DONE hz: 大乐透
- DONE hz: 3D
- DONE hz: 双色球
*** CoopShare: 提交合作项目
** 03-06
*** DONE 彩票追号:QA测试
*** CoopShare: 提交合作项目
*** DONE Blog: 完善业务和流程
*** TODO Blog: gem之美rack
** 03-07
*** TODO 话费项目重试部分重构
*** Blog: rack结构
*** 阅读: JavaScript设计模式
** 03-08
*** 话费项目重构
**** 简化重试业务模型
**** 在OrderRecord模型上增加重试和拆分金额的业务
**** 去掉ChangeRetry模型
**** 新的重试验流程
***** TODO 金额拆分
***** 渠道排序，每一个金额对应一组渠道
***** 遍历渠道下单
***** 充值回调成功
***** 充值回调失败
***** 渠道队列遍历结束，没有成功下单，进入下次重试
*** 读书: JavaScript设计模式
** 03-09
*** DONE 读书: JavaScript设计模式
*** DONE 生活: 整理家务，清洗衣物，打扫房间
*** 工作: 话费重试重构整理出一套流程图
** 03-10
*** DONE 读书: JavaScript设计模式
*** DONE 生活: 找房1000-2000
** 03-11
*** 话费项目重构
**** 简化重试业务模型
**** 新的重试验流程
***** DONE 金额拆分
***** DONE 渠道排序，每一个金额对应一组渠道
***** TODO 遍历渠道下单
***** 充值回调成功
***** 充值回调失败
***** 渠道队列遍历结束，没有成功下单，进入下次重试
** 03-12
*** 话费项目重构
**** 简化重试业务模型
**** 新的重试验流程
***** DONE 金额拆分 2013-02-11
***** DONE 渠道排序，每一个金额对应一组渠道 2013-02-11
***** DONE 遍历渠道下单
***** DONE 更新金额拆分算法
***** 充值回调成功
***** 充值回调失败
***** 渠道队列遍历结束，没有成功下单，进入下次重试
** 03-13
*** 话费项目重构
**** 太初重试
**** DONE 捷银重试
**** 欧飞新重试
**** 19pay重试
**** 手拉手重试
**** 徳慈重试
**** 易充宝重试
**** 君宝重试
**** 清理各表的无用字段
**** 渠道充值订单查询
**** DONE change_retry三个状态: 初始，挂起，结束
**** 有默认值的column都改为null => false
**** DONE 简化重试业务模型
**** 新的重试验流程
***** DONE 金额拆分 2013-03-11
***** DONE 渠道排序，每一个金额对应一组渠道 2013-03-11
***** DONE 遍历渠道下单 2013-03-12
***** DONE 更新金额拆分算法 2013-03-13
***** TODO 渠道队列遍历结束，没有成功下单，进入下次重试
***** 充值回调成功
***** 充值回调失败
** 03-14
*** 话费项目重构
**** 太初重试
**** DONE 捷银重试
**** 欧飞新重试
**** 19pay重试
**** 手拉手重试
**** 徳慈重试
**** 易充宝重试
**** 君宝重试
**** 清理各表的无用字段
**** DONE 渠道充值订单查询
**** TODO 将渠道查询方法提取为没有重发报文的方法
***** 太初查询活动
***** TODO 捷银查询活动
***** 欧飞新查询活动
***** 19pay查询活动
***** 手拉手重试查询活动
***** 徳慈查询活动
***** 易充宝查询活动
***** 君宝查询活动
**** 有默认值的column都改为null => false
*** Rails find 方法的bug
** 03-15
*** 太初查询活动
*** TODO 捷银查询活动
*** 欧飞新查询活动
*** 19pay查询活动
*** 手拉手重试查询活动
*** 徳慈查询活动
*** 易充宝查询活动
** 03-16
** 03-17
*** DONE 读书:JavaScript设计模式
** 03-18
*** DONE 太初查询活动
*** DONE 捷银查询活动
*** DONE 欧飞新查询活动
*** 19pay查询活动(高阳)
*** TODO 手拉手重试查询活动
*** 徳慈查询活动
*** 易充宝查询活动
** 03-19
*** DONE 捷银查询活动
*** DONE 欧飞新查询活动
*** 19pay查询活动(高阳)
*** DONE 手拉手查询活动
*** DONE 徳慈查询活动
*** TODO 易充宝查询活动
** 03-20
*** DONE 易充宝查询活动
*** DONE 19pay查询活动(高阳)
*** DONE 查询订单返回amount(预期充值金额), success_amount(实际充值金额)
- 太初 DONE
- 捷银 DONE
- 欧飞新 DONE
- 19pay DONE
- 手拉手 DONE
- 徳慈 DONE
- 易充宝 DONE
** 03-21
*** DONE 重发
*** DONE update verified charge
*** DONE 充值回调，更新change_log的success_amount和status
*** DONE 充值回调，更新order_record的success_amount和status
*** DONE 表字段整理
**** DONE order_records表
- success_amount not null default 0
- remove charged_amount
- remove retryable
**** DONE change_logs表
- change success_amount to not null default 0
- remove charged_amount
** 03-22
*** DONE 渠道筛选
*** DONE 充值重试的定时任务
*** DONE 充值重试API
*** DONE 充值重构QA部署
*** DONE 评审测试用例
** 03-25
*** 话费充值QA测试
*** PingPong
** 03-26
*** DONE 捷银重试测试
*** DONE 订单拆单测试
** 03-27
*** DONE 介绍rspec用法
- 生成测试报告, rspec simple_spec.rb -f html -o simple_spec.html
[p]rogress (default - dots)
[d]ocumentation (group and example names)
[h]tml
[t]extmate
[j]son
- 基本用法
*** DONE order_record增加字段: unconfirmed_amount
*** change_retries表清除money_formual_index字段
*** 充值重试QA测试
**** TODO CZCS_007
**** CZCS_008
**** CZCS_009
**** CZCS_010
**** CZCS_011
**** CZCS_012
**** CZCS_013
** 03-28
*** change_retries表清除money_formual_index字段
*** 充值重试QA测试
**** TODO CZCS_007
**** CZCS_008
**** CZCS_009
**** CZCS_010
**** CZCS_011
**** CZCS_012
**** CZCS_013

*** DONE 捷银回调通知
*** DONE 手拉手回调通知
*** DONE 太初回调通知
*** DONE 易充宝回调通知
*** DONE 德慈回调通知
*** DONE 殴飞新回调通知
*** DONE 19pay回调通知
*** 同步充值时如果充值失败应该生成重试订单
** 04-01
*** 充值请求重构
**** TODO 捷银充值请求
**** 手拉手充值请求
**** 太初充值请求
**** 易充宝充值请求
**** 德慈充值请求
**** 殴飞新充值请求
**** 19pay充值请求
*** 话费重试QA测试
**** 捷银支付回调
**** 捷银支付
**** 捷银支付返回
** 04-02
*** 充值请求重构
**** DONE 捷银充值请求
**** TODO 手拉手充值请求
**** 太初充值请求
**** 易充宝充值请求
**** 德慈充值请求
**** 殴飞新充值请求
**** 19pay充值请求
**** DONE 捷银查询请求
**** DONE 手拉手查询请求
**** DONE 太初查询请求
**** DONE 易充宝查询请求
**** DONE 德慈查询请求
**** DONE 殴飞新查询请求
**** DONE 19pay查询请求
*** 话费重试QA测试
**** 捷银支付回调
**** 捷银支付
**** 捷银支付返回
** 04-03
*** 充值请求重构
**** DONE 捷银充值请求
**** DONE 手拉手充值请求
**** DONE 太初充值请求
**** DONE 易充宝充值请求
**** TODO 德慈充值请求
**** 殴飞新充值请求
**** 19pay充值请求

** 04-06
*** 充值请求重构
**** DONE 捷银充值请求
**** DONE 手拉手充值请求
**** DONE 太初充值请求
**** DONE 易充宝充值请求
**** DONE 德慈充值请求
**** DONE 殴飞新充值请求
**** DONE 19pay充值请求
** 04-07
*** DONE 19pay充值请求
*** TODO 支付回调
*** 捷银充值测试
*** 手拉手充值测试
*** 太初充值测试
*** 易充宝充值测试
*** 德慈充值测试
*** 殴飞新充值测试
** 04-08
*** DONE 支付回调
*** TODO 捷银充值测试
*** 手拉手充值测试
*** 太初充值测试
*** 易充宝充值测试
*** 德慈充值测试
*** 殴飞新充值测试
** 04-09
*** DONE 捷银充值测试
*** DONE 手拉手充值测试
*** DONE 太初充值测试
*** TODO 易充宝充值测试
*** 德慈充值测试
*** 殴飞新充值测试
*** 19Pay充值测试
*** 清理数据库中多余字段
*** DONE 清理多余的文件
*** TODO 增加Activity测试
** 04-10
*** DONE 易充宝充值测试
*** 德慈充值测试
*** 殴飞新充值测试
*** TODO 19Pay充值测试
*** 清理数据库中多余字段
*** DONE 增加Activity测试
** 04-11
*** TODO 德慈充值测试
*** DONE 殴飞新充值测试
*** DONE 19Pay充值测试
*** DONE 清理数据库中多余字段
*** 可能需要将拆分金额放到验证金额之后做
** 04-12
*** DONE 德慈充值测试
*** 重试测试--捷银渠道
** 04-13
*** DONE 捷银查询余额
*** DONE 手拉手查询余额
*** DONE 太初查询余额
*** DONE 易充宝查询余额
*** 德慈查询余额
*** 殴飞新查询余额
*** 19Pay查询余额
** 04-15
*** DONE 德慈查询余额(一直返回空)
*** TODO 殴飞新查询余额
*** 19Pay查询余额
*** 重试测试
*** 彩票追号:加报警邮件，加http重试，新期按期号排序
** 04-16
*** DONE 德慈查询余额(一直返回空)
*** DONE 殴飞新查询余额
*** DONE 19Pay查询余额
*** DONE 话费充值加余额报警邮件和短信
*** TODO 在线充值
*** 渠道回调时找不到的订单号应该写到数据库
*** 渠道余额报警还剩下三个渠道
*** 重试测试
*** 彩票追号:加报警邮件，加http重试，新期按期号排序
** 04-17
*** DONE 德慈查询余额(一直返回空)
*** DONE 话费充值加余额报警邮件和短信
*** TODO 在线充值
*** DONE 渠道回调时找不到的订单号应该写到数据库
- 捷银
- 欧飞
- 手拉手
- 易充宝
- 19pay
*** DONE 渠道余额报警还剩下三个渠道(德慈)
*** 重试测试
*** 彩票追号:加报警邮件，加http重试，新期按期号排序
** 04-18
*** TODO 在线充值
*** 重试测试
*** 彩票追号:加报警邮件，加http重试，新期按期号排序

*** block, lambda, proc
** 04-19
*** DONE 话费充值QA测试
- 按实际金额对渠道进行优先级排序
** 04-20
*** DONE 博客:聊聊block, proc, lambda
*** 阅读:设计模式
** 04-21
*** DONE 博客:聊聊block, proc, lambda
** 04-22
*** DONE 渠道最大测试次数
*** DONE 重试队列显示(去掉拆分组，增加更新时间，重试次数)
*** DONE 立即重试
*** DONE 找不到合适渠道
*** 在线充值审批
*** 话费充值重试
*** DONE 给家里寄钱
** 04-23
*** DONE 追号unclear状态，不生成新的change_log
*** TODO 充值重试时，不去渠道查询订单状态
*** 在线充值审批
*** 话费充值重试

** 04-24
*** DONE 充值重试时，不去渠道查询订单状态
*** DONE 话费充值部分成功
*** DONE 渠道优先使用次数
*** DONE 余额报警
*** TODO 在线充值审批
*** 话费充值重试

** 04-25
*** 在线充值审批
*** 话费充值重试
*** 追号部署
- 追号报警            TODO
- find_or_create_bet OK
- 剔除竞彩足球         OK
- 测试               TODO 金软OK，海中OK，华彩TODO
** 04-26
*** 追号部署
- 追号报警            TODO
- find_or_create_bet OK
- 剔除竞彩足球         OK
- 测试               TODO 金软OK，海中OK，华彩TODO
*** DONE 地气ground 
** 04-27
*** DONE 追号代码review
*** DONE 追号报警验收测试
- 有漏追追号记录 OK
- 有失败追号记录 OK
*** DONE 16:00开始部署
*** DONE 追号部署
- 追号报警            OK
- find_or_create_bet OK
- 剔除竞彩足球         OK
- 测试               金软OK，海中OK，华彩OK

*** 买食物和水
** 04-28
*** 买食物，水，不锈钢杯
*** DONE 调试追号报警定时任务
*** 约定rack源代码
** 05-02
*** 话费QA测试
** 05-03
*** DONE 易充宝充值测试
*** DONE 欧飞充值测试
*** DONE 手拉手充值测试
*** DONE 太初充值测试
*** 捷银充值测试
*** DONE 19pay充值测试
*** 德慈充值测试
** 05-06
*** TODO 审核话费充值代码
*** 研究话费充值部署方案
*** DONE 报警邮件，正常情况下也要发邮件
*** DONE 清除原先绑定的手机号码
*** TODO 19pay和ycb需要重新测试
** 05-07
*** DONE 研究B2B项目
*** TODO 19pay和ycb需要重新测试
** 05-08
*** DONE 研究rack源代码
** 05-09
*** ground
**** 与rack适配器连接起来
*** 渠道优先级
**** DONE 从开发分支上拉分支
**** DONE 人工设定值
**** TODO 自动优先级值，未知，成功，失败，充值中作为连续的判断
**** 渠道优先级值
**** 优先级值相同，选择价格较低渠道
**** 优先级值相同，价格相同，走先接入的渠道
** 05-10
*** ground
**** 与rack适配器连接起来
*** 渠道优先级
**** DONE change_logs增加merchant, province, product_id三个字段
**** DONE change_logs表去掉merchant, province两字段
**** DONE 去掉continuous_fail_change_logs
**** DONE 去掉ContinuousFailChangeLogs模型
**** DONE product表增加auto_priority字段
**** DONE 增加表continuous_fail_change_logs
**** DONE 自动优先级值，未知，充值失败，下单失败作为连续的判断
**** 渠道优先级值
**** DONE 优先级值相同，选择价格较低渠道
**** DONE 优先级值相同，价格相同，走先接入的渠道
**** TODO 渠道优先级代码review r21330:21331
** 05-13
*** TODO 渠道优先级
*** DONE 测试在线充值
*** gem之美,rack
** 05-14
*** DONE gem之美,rack
*** TODO 渠道优先级
*** 阅读设计模式
** 05-15
*** 场景大师
**** 解决中文字符乱码问题
**** 场景浏览
**** 保存历史场景
**** 创建计划场景
**** DONE 引入css文件
** 05-16
*** 渠道优先级
*** 话费充值代码review
*** TODO 完善ground的路由
*** Scene Master
** 05-17
*** 渠道优先级交互
**** 人工设定值
**** 自动优先级值
**** 人工归零功能
**** 渠道优先级值
**** TODO 渠道优先级查看
** 05-20
*** 话费版本21355-
*** 渠道优先级交互
**** DONE 人工设定值
**** DONE 自动优先级值
**** DONE 渠道导航
**** DONE 优先级的修改
**** DONE 渠道优先级查看
**** DONE 开发ground
**** TODO 人工归零功能
**** 渠道优先级值
**** 最后更新时间
**** 10,20,30的面额
**** 操作日志
**** 优先级权限
** 05-21
*** 话费版本21355-
*** 渠道优先级交互
**** DONE 人工设定值     2013-05-21
**** DONE 自动优先级值   2013-05-21
**** DONE 渠道导航       2013-05-21
**** DONE 优先级的修改    2013-05-21
**** DONE 渠道优先级查看  2013-05-21
**** DONE 开发ground    2013-05-21
**** DONE 10,20,30的面额
**** DONE 人工归零功能，针对渠道自动优先级，人工归零日志，操作权限
**** DONE 优先级修改日志
**** DONE 渠道优先级值修改
**** DONE 渠道优先级值修改日志
**** DONE 代码review
**** 最后更新时间
** 05-22
*** DONE 最后更新时间
*** ground路由系统
*** DONE 阅读sinatra源代码 1-100line
** 05-23
*** 测试渠道优先级别
*** Done 阅读sinatra源代码 100-400line
** 05-24
*** DONE 阅读sinatra源代码 400-800line
*** DONE 测试渠道优先级别
*** TODO 研究sinatra的路由系统
** 05-27
*** 话费渠道优先级上线测试
*** TODO sinatra路由系统
** 05-29
*** DONE ground路由系统
*** DONE 话费后台系统样式
** 05-30
*** TODO 处理追号失败订单
*** DONE 处理追号漏追订单
*** DONE migration增加注释
*** ground框架
**** DONE 支持汉字 
**** DONE 支持haml template
**** TODO 支持sequel orm
**** 支持样式表
** 05-31
*** ground框架
**** 支持sequel orm
**** 支持样式表
**** DONE 支持redirect
** 06-03
*** SceneMaster
**** haml支持汉字
**** DONE 加入样式
**** DONE 支持静态文静
**** 创建场景角色role [name]
**** 创建场景活动activity [角色 动作 内容]
**** 创建场景活动flow [activity1, activity2, activity3, activity4]
*** 测试话费充值渠道
** 06-04
*** DONE 处理彩票漏追
*** 场景大师
**** DONE 路由辅助方法
**** TODO 创建场景角色role [name]
**** 创建场景活动activity [角色 动作 内容]
**** 创建场景活动flow [activity1, activity2, activity3, activity4]
** 06-05
**** DONE 创建场景活动activity [角色 动作 内容]
**** DONE 创建场景活动flow [activity1, activity2, activity3, activity4]

**** TODO 整理彩票追号文档
** 06-06
*** DONE 彩票追号文档
*** SceneMaster增加对话
*** SceneMaster用户登陆
** 06-07
*** DONE 处理彩票漏追
*** DONE 评审测试项目代码
*** DONE SceneMaster, scene添加activity
*** DONE SceneMaster, 数据验证
** 06-08
*** TODO SceneMaster添加活动
*** SceneMaster主题样式
** 06-13
*** SceneMaster
**** DONE 用户注册
**** 实现layout功能
**** 根据路由加载中间件
**** 用户登陆
**** 用户收藏场景
**** 用户创建场景
**** 用户编辑场景
**** 用户删除activity
**** 私人场景
**** 公共场景
**** Index页面
** 06-17
*** SceneMaster
**** DONE 用户注册
**** DONE 用户登陆
**** DONE 场景显示页面的样式
**** DONE 点击活动中的角色，角色会在活动输入框的角色框显示
**** DONE 点击活动中的动作，动作会在活动输入框的动作框显示

**** 用户登出
**** 用户删除活动
**** 用户编辑活动
**** 私人场景
**** 公共场景
**** 用户创建场景
**** 用户编辑场景
**** Index页面
**** 实现layout功能
**** 根据路由加载中间件
** 06-18
*** SceneMaster
**** DONE 用户登出
**** 路由系统， get(path, state)形式
**** 在每个活动后面显示增加，修改，删除三个图标
**** 用户删除活动
**** 用户编辑活动
**** 用户增加活动
**** 私人场景
**** 公共场景
**** 用户创建场景
**** 用户编辑场景
**** Index页面
**** 实现layout功能
**** 根据路由加载中间件
**** 将项目部署到heroku
** 06-19
*** SceneMaster
**** DONE 路由系统， get(path, state)形式
**** DONE 在每个活动后面显示增加，修改，删除三个icon
**** DONE 用户删除活动
**** 用户编辑活动
**** 用户增加活动
**** 私人场景
**** 公共场景
**** 用户创建场景
**** 用户编辑场景
**** 分页
**** Index页面
**** 实现layout功能
**** 根据路由加载中间件
**** 将项目部署到heroku
** 06-20
*** SceneMaster
**** DONE 路由系统， get(path, state)形式
**** DONE 在每个活动后面显示增加，修改，删除三个icon
**** DONE 用户删除活动
**** DONE 用户编辑活动
**** DONE 用户增加活动
**** 用户拖动活动
**** 私人场景
**** 公共场景
**** 场景描述
**** 用户创建场景
**** 用户编辑场景
**** 分页
**** Index页面
**** 实现layout功能
**** 根据路由加载中间件
**** 主色彩yellow
**** 将项目部署到heroku
*** DONE 处理追号失败记录
** 06-21
*** SceneMaster
**** DONE 路由系统， get(path, state)形式
**** DONE 在每个活动后面显示增加，修改，删除三个icon
**** DONE 用户删除活动
**** DONE 用户编辑活动
**** DONE 用户增加活动
**** DONE 用户拖动活动
**** 私人场景
**** 公共场景
**** 场景描述
**** 用户创建场景
**** 用户编辑场景
**** 分页
**** Index页面
**** 实现layout功能
**** 根据路由加载中间件
**** 主色彩yellow
**** 将项目部署到heroku
*** DONE 建行活动文档模板化
** 06-24
*** SceneMaster
**** DONE 路由系统， get(path, state)形式
**** DONE 在每个活动后面显示增加，修改，删除三个icon
**** DONE 用户删除活动
**** DONE 用户编辑活动
**** DONE 用户增加活动
**** DONE 用户拖动活动
**** DONE 私人场景
**** DONE 公共场景
**** DONE 场景描述
**** TODO 使用用户名注册，登陆
**** 用户创建场景
**** 用户编辑场景
**** 创建一个Guest用户
**** 分页
**** Index页面
**** 实现layout功能
**** 根据路由加载中间件
**** 主色彩yellow
**** 预防外部脚本注入
**** 项目安全评估
**** 将项目部署到heroku
** 06-25
*** SceneMaster
**** DONE 路由系统， get(path, state)形式
**** DONE 在每个活动后面显示增加，修改，删除三个icon
**** DONE 用户删除活动
**** DONE 用户编辑活动
**** DONE 用户增加活动
**** DONE 用户拖动活动
**** DONE 私人场景
**** DONE 公共场景
**** DONE 场景描述
**** TODO 使用用户名注册，登陆
**** 用户创建场景
**** 用户编辑场景
**** 创建一个Guest用户
**** 分页
**** Index页面
**** 实现layout功能
**** 根据路由加载中间件
**** 主色彩yellow
**** 预防外部脚本注入
**** 项目安全评估
**** 将项目部署到heroku
*** DONE 处理彩票漏追
*** 彩票重复追报告
** 06-26
*** SceneMaster
**** DONE 路由系统， get(path, state)形式
**** DONE 在每个活动后面显示增加，修改，删除三个icon
**** DONE 用户删除活动
**** DONE 用户编辑活动
**** DONE 用户增加活动
**** DONE 用户拖动活动
**** DONE 私人场景
**** DONE 公共场景
**** DONE 场景描述
**** DONE 使用用户名注册，登陆
**** DONE 用户创建场景
**** TODO 用户编辑场景描述，场景名
**** 分页
**** Index页面
**** 实现layout功能
**** 主色彩yellow
**** 预防外部脚本注入
**** 创建应用自带的Guest用户
**** 项目安全评估
**** 根据路由加载中间件
**** 修复各类bug
**** 将项目部署到heroku
*** 非常好看
** 06-27
*** DONE 安装mysql
*** 导入fchk表
*** 导入fchk数据
*** 安装php解释器
*** CodeIgniter安装
** 06-28
*** DONE 处理双色球漏追
*** DONE 处理话费充值重试次数bug
*** Contest
**** DONE 导出线网数据到本地
**** 发布比赛
** 07-01
*** Contest
**** 发布比赛
**** 阅读非常好看文档

** 07-02
*** 非常好看
**** 后台比赛发布
**** 数据跟踪与统计
** 07-03
*** DONE 大乐透追号跳期
*** 非常好看后台比赛发布
** 07-04
*** DONE 生成大乐透追号失败订单
*** 阅读非常好看文档
** 07-05
*** DONE scene预防外部脚本注入
*** TODO 设计非常好看数据库
*** scene部署到heroku
*** 非常好看计划安排
**** DIY创建比赛 10天
**** 用户权限管理 3天
**** 比赛管理 3天
**** 网站整体数据 5天
**** 比赛数据 4天
**** 用户数据 4天
**** 标签数据 1天
**** 登陆，注册 2天
**** 个人中心 4天
**** 邀请朋友 3天
**** 系统通知 2天
**** 调整页面 2天
** 07-08
*** 非常好看计划安排
**** DIY创建比赛
***** DONE 创建contests表
**** 用户权限管理
**** 比赛管理
**** 网站整体数据
**** 比赛数据
**** 用户数据
**** 标签数据
**** 登陆，注册
**** 个人中心
**** 邀请朋友
**** 系统通知
**** 调整页面
** 07-09
*** 非常好看
**** DONE 比赛类别
**** DONE 比赛图片
**** DONE 创建赞助商
**** 赞助比赛
**** 显示比赛
** 07-10
*** 非常好看
**** DONE 赞助比赛
**** DONE 将未明白的字段问明白
**** DONE 将未清楚的功能问清楚
**** 显示比赛
**** 实施比赛
**** 记录比赛数据
** 07-11
*** 非常好看
**** DONE 新浪微博登陆
**** TODO QQ登陆
**** 显示比赛
**** 实施比赛
**** 记录比赛数据
** 07-12
*** 非常好看
**** DONE QQ微博分享
**** TODO 批量上传比赛图片
**** 在线图片缩放
**** 显示比赛
**** 实施比赛
**** 记录比赛数据
*** 处理彩票漏追
** 07-15
*** 处理追号漏追
*** 非常好看
**** TODO 在线编辑图片
**** 批量上传图片
** 07-16
*** 非常好看
**** 用户登陆api
**** 用户注册api
** 07-17
*** 非常好看
**** TODO 用户登陆api
**** DONE 用户注册api
** 07-18
*** 非常好看
**** DONE 查询比赛api
**** DONE 用户登陆api
**** DONE 用户信息更新api
**** DONE 生成大乐透失败
** 07-19
*** 非常好看
**** DONE 比赛评论接口
**** DONE 单个比赛数据查询api的返回结果应该包括奖品，评论等数据
**** TODO 比赛增加创建者，已浏览，已参赛等数据
**** 比赛投票api
**** 梳理用户积分系统需求

** 07-22
*** 非常好看
**** DONE 比赛投票api
**** 搭建非常好看用户积分系统
** 07-23
*** TODO 投票结果统计api
*** 用户创建比赛api
** 07-24
*** 投票结果统计api
*** 用户创建比赛api
*** DONE 传统比赛积分算法
*** DONE PK比赛通过elo算法计算等级分
** 07-25
*** DONE 用户创建比赛api
*** 搭建QA环境
** 07-26
*** 搭建QA环境
*** 用户积分系统
*** DONE 查询用户数据
** 07-29
*** DONE 取消关注用户api
*** TODO 部署QA 
*** 用户积分系统
*** 整合后台UI
** 07-30
*** DONE 部署QA
*** TODO 获取消息api
*** 搜索比赛api
*** 排行榜api
*** 举报api
** 07-31
*** DONE 获取用户个人资料
*** DONE 和手机客户端联调注册流程
*** DONE 联调手机客户端第三方登录
** 08-01
*** DONE 新浪微博用户与本地用户绑定
*** 手机客户端QQ登陆
*** DONE QQ用户与本地用户绑定
** 08-02
*** DONE 手机客户端QQ登陆
*** DONE 返回第三方账号的资料
*** 查询已经结束的比赛
** 08-05
*** DONE 查询中奖api
*** TODO 查询已经结束的比赛api
*** 查询相关比赛api
** 08-06
*** 上传图片参赛api
*** 查询相关比赛api
*** DONE contestSearch api增加user_sn, user_name等数据
*** DONE 调试手机客户端图片保存
*** 整合后台UI
** 08-07
*** DONE 图片存储到10.61.0.104服务器上
*** 整合后台UI
*** DONE 查询相关比赛api
** 08-08
*** 非常好看项目
**** TODO 整合后台UI
**** DONE 手机客户端新浪微博登陆后，提供user_sn给客户端
**** DONE api文档增加绑定qq,weibo用户的说明
**** 通过fchk.funguide.com.cn这台服务器访问图片
*** 跑步
*** TODO 使用ground启动angular-phonecat
*** DONE emacs配置ternjs
    CLOSED: [2013-08-08 Thu 23:56]
** 08-09
*** DONE 常非好看后台UI:比赛管理
*** TODO 非常好看后台UI:DIY创建比赛
*** 非常好看后台UI:赞助商管理
** 08-10
*** DONE 吃早饭								 :生活:
*** DONE 学习制作牛肉罐头						         :户外:
*** DONE 游泳1500米							 :锻炼:
*** 练习angular-phonecat两小时						 :学习:
*** 去迪卡侬买太阳镜，泳镜，徒步鞋，防晒霜 				         :户外:
*** 学习摄影 								 :户外:
*** 卖hp笔记本电脑 							 :生活:
**** DONE 装win7
**** 在网上发布 	
** 08-11
*** DONE 练习angular-phonecat两小时
*** DONE 游泳1500米
** 08-12
*** DONE 处理双色球漏追
*** DONE 后台UI:DIY创建比赛,比赛基本信息
*** 后台UI:DIY创建比赛,设置参赛信息
*** 后台UI:DIY创建比赛,设置赞助商信息
*** 后台UI:DIY创建比赛,设置奖品信息
*** 跑步
** 08-13
*** DONE 开发例会
*** DONE 后台UI:DIY创建比赛,设置参赛信息
*** 后台UI:DIY创建比赛,设置赞助商信息
*** 后台UI:DIY创建比赛,设置奖品信息
*** 调试getMessages接口500错误
*** 游泳1500米 
** 08-14
*** DONE 后台UI:DIY创建比赛,设置赞助商信息
*** DONE 后台UI:DIY创建比赛,设置奖品信息
*** 调试getMessages接口500错误
*** 折叠椅, 泳镜, 沙滩鞋, 沙滩短裤, 背心, 太阳镜, 防嗮霜
** 08-15
*** DONE debug getMessages接口
*** DONE 获取热门比赛的接口
*** DONE 获取单个比赛api,需要返回参与人数，比赛图片，创建者头像，创建者的关注状态
*** DONE 获取用户关注的人，朋友，粉丝接口
*** TODO 后台UI:赞助商管理
*** 5道与数字95相关的题目
- 95版神雕侠侣
** 08-16
*** DONE 后台UI:赞助商管理
*** TODO 后台UI:审核管理
*** 后台UI:权限管理
*** 后台UI:赞助管理
*** 彩票追号:检测到有漏追，立即重试追号
** 08-18
*** DONE 整理户外照片，给大家发照片
*** DONE 洗澡睡觉
** 08-19
*** DONE 后台UI权限管理
*** DONE 后台UI用户信息审核
*** DONE 后台UI赞助管理
*** DONE 后台UI赞助商协议审核
*** 分享api
*** 邀请朋友api
*** DONE 审核合并测试代码
*** 下班后和mimosa聊聊, http://ruby-china.org/topics/13407
*** 开发description
** 08-20
*** DONE 练习蝶泳
*** DONE 开发description
*** DONE 买一些玉米棒子做早晚餐
*** DONE 调试后台创建比赛流程
*** DONE 后台UI创建赞助商
** 08-21
*** 调试后台创建比赛流程
*** 后台UI编辑比赛
*** DONE 练习蝶泳
*** DONE 开发description
*** DONE 买一些玉米棒子做早晚餐
*** DONE 调试后台创建比赛流程
*** DONE 后台UI创建赞助商
*** DONE 手机客户端找回密码
** 08-22
*** TODO 提供删除消息的接口
*** 提供更新用户感情状态，地区等入口
*** 后台创建带奖品的比赛用于手机客户端调试    
*** 用户开始比赛后view count和join count没有增加
*** DONE 自由泳1千米
*** 分享链接
*** 比赛赢积分
*** DONE 开发description
** 08-23
*** DONE 提供更新用户感情状态，地区等入口
*** DONE 进入比赛的api
*** DONE 处理彩票追号格式错误的问题
*** DONE 后台创建带奖品的比赛用于手机客户端调试    
*** 用户开始比赛后view count和join count没有增加
*** 给前端安装一套vagrant调试环境
*** DONE 自由泳1000米
*** DONE 后台显示比赛详情
*** 后台编辑比赛
*** DONE 开发description
*** 给dun增加文档
*** 给ground增加文档
** 08-24
*** DONE 开发description
*** DONE 游泳1000米
*** 给hp笔记本增加内存
** 08-25
*** DONE 开发ground，支持.json, .xml之类的路由
*** DONE 开发description
*** DONE 游泳500米
*** DONE 编写ground文档
*** DONE 给hp笔记本增加内存
** 08-26
*** DONE 非常好看:用户登录后返回一个头像
*** DONE 非常好看:绑定账号时,如果客户有传user_sn，那么就直接绑定user，否则创建新的user
*** DONE 非常好看:搜索和热门比赛需要is_open参数来区分是否开放的比赛
*** DONE 查看时时彩追号失败的原因
*** DONE 非常好看:手机客户端webview页面
*** 研究下vagrant
*** DONE 给前端安装vagrant
*** 非常好看:后台比赛编辑
*** DONE 开发description
*** DONE 游泳500米
*** dun文档
** 08-27
*** DONE 给前端搭建vagrant开发环境
*** DONE 整理后台可用功能测试列表email给瑞丽
- 后台首页查看比赛
- DIY创建比赛, 查询比赛，创建比赛
- 比赛管理，按标题，创建人和日期查询比赛
- 赞助管理，查询赞助
- 赞助商管理, 查询赞助商
- 赞助商管理，添加赞助商
- 用户管理,  查询用户
- 举报管理，查询举报
*** 后台:编辑比赛
*** 后台:比赛状态 0草稿, 1发布
*** DONE 开发description
*** DONE 游泳500米
*** 学习蝶泳
*** DONE 买一部西班牙语字典
** 08-28
*** DONE 非常好看: 提供一个判断用户之间关系的api
*** DONE 后台:编辑比赛
*** 后台:比赛状态 0草稿, 1发布
*** 非常好看，比赛赢积分
*** 写一篇搭建vagrant的博客
*** DONE 开发description
*** DONE 游泳500米
*** 学习西班牙语
** 08-29
*** DONE 非常好看后台:比赛奖品编辑
*** DONE 非常好看后台:比赛状态 0草稿, 1发布
*** DONE 非常好看:绑定第三方帐户后，返回的第三方数据为空
*** 非常好看:web app
**** 首页
- 推荐比赛
- 更多比赛
- 最新中奖用户
- 搜比赛
**** 进入比赛
- 比赛数据显示
- 图片PK
*** DONE 游泳500米
*** DONE 开发description
*** 发布description-0.1.0版本
*** 学习西班牙语
- 简单的问候 hola
- 你喜欢旅行吗?
- 你去过哪些国家?
- 你喜欢徒步吗?
** 08-30
*** 非常好看:web app
**** TODO 首页
- 推荐比赛
- 更多比赛
- 最新中奖用户
- 搜比赛
**** 进入比赛
- 比赛数据显示
- 图片PK
*** 非常好看: bugs
- fix: 后台首页查看比赛  罗列创建时选择的所有类别，按创建时间排列 能否按单个类别来查看、筛选比赛？
- fix: 查看更多比赛--点击无反应	应跳转到比赛管理页
- fix: DIY创建比赛, 查询比赛，创建比赛	类别可多选；不选择类别，也可创建比赛	必须选择至少一个类别
- fix: 比赛起始时间设定后，在比赛详情页默认显示为7天	将比赛时长与比赛起始时间建立关联
- 上传图片仅限于8张	增加“继续添加”或“继续上传”按钮
- 没有给图片“添加标签”的选项	添加选项
- 上传图片结束后，直接进入比赛详情展示	应继续进行“添加赞助商和奖品”的操作
- 创建赞助商比赛113,114，116等，在手机端UGC部分显示	赞助商比赛应在手机端赞助商栏显示
- 比赛管理，按标题，创建人和日期查询比赛	比赛创建时间显示不正确 下午17时创建的比赛115--118，显示为上午8点30多	　
- 赞助管理，查询赞助	添加赞助--按钮无反应	无法添加赞助，请协助解决
- 赞助商管理, 查询赞助商	　	　
- 赞助商管理，添加赞助商	增加赞助商--按钮无反应	无法添加赞助商，请协助解决
- 用户管理,  查询用户	只能按照用户全名精确搜索，无法按关键词搜索。用户名为“中国”，搜索中或国字，搜索不到	　
- 举报管理，查询举报 	　
*** description发布0.1.0版本
*** 博客: 从龙虾开始，聊聊Rack应用的结构以及使用Rack搭建复杂web应用
*** 阅读: Rack编程
*** DONE 游泳500m
** 08-31
*** DONE 游泳:500m
*** DONE 取钱:1500
*** DONE 阅读:Rack编程
*** DONE 发布description-0.1.0
*** 开始Gstar的设计与开发
** 09-01
*** DONE 游泳: 自由泳500米, 蝶泳300米
*** DONE 阅读: Rack编程
*** 设计Gstar
*** 非常好看: bugs
- fix: 后台首页查看比赛  罗列创建时选择的所有类别，按创建时间排列 能否按单个类别来查看、筛选比赛？
- fix: 查看更多比赛--点击无反应	应跳转到比赛管理页
- fix: DIY创建比赛, 查询比赛，创建比赛	类别可多选；不选择类别，也可创建比赛	必须选择至少一个类别
- fix: 比赛起始时间设定后，在比赛详情页默认显示为7天	将比赛时长与比赛起始时间建立关联
- 上传图片仅限于8张	增加“继续添加”或“继续上传”按钮
- 没有给图片“添加标签”的选项	添加选项
- 上传图片结束后，直接进入比赛详情展示	应继续进行“添加赞助商和奖品”的操作
- 创建赞助商比赛113,114，116等，在手机端UGC部分显示	赞助商比赛应在手机端赞助商栏显示
- 比赛管理，按标题，创建人和日期查询比赛	比赛创建时间显示不正确 下午17时创建的比赛115--118，显示为上午8点30多	　
- 赞助管理，查询赞助	添加赞助--按钮无反应	无法添加赞助，请协助解决
- 赞助商管理, 查询赞助商	　	　
- 赞助商管理，添加赞助商	增加赞助商--按钮无反应	无法添加赞助商，请协助解决
- 用户管理,  查询用户	只能按照用户全名精确搜索，无法按关键词搜索。用户名为“中国”，搜索中或国字，搜索不到	　
- 举报管理，查询举报 	　
** 09-02
*** DONE 游泳: 自由泳400米, 蝶泳400米
*** 阅读: rack编程
*** DONE 开发: Gstar
*** 非常好看: weibo app 嵌套页面
**** DONE 首页
**** 游戏列表
**** 游戏中
**** 个人中心
*** 非常好看: fix bug
**** 上传图片仅限于8张	增加“继续添加”或“继续上传”按钮
**** 上传图片结束后，直接进入比赛详情展示	应继续进行“添加赞助商和奖品”的操作
**** 创建赞助商比赛113,114，116等，在手机端UGC部分显示	赞助商比赛应在手机端赞助商栏显示
**** 赞助管理，查询赞助	添加赞助--按钮无反应	无法添加赞助，请协助解决
**** 赞助商管理，添加赞助商	增加赞助商--按钮无反应	无法添加赞助商，请协助解决
**** 用户管理,  查询用户	只能按照用户全名精确搜索，无法按关键词搜索。用户名为“中国”，搜索中或国字，搜索不到
**** 举报管理，查询举报
*** DONE 彩票: 处理追号异常
*** DONE dun: 增加文档
*** DONE dun: 发布0.1.1
** 09-03
*** DONE 非常好看: 例会
*** DONE 非常好看: 图片筛选流程
*** 非常好看: 参赛图片显示算法
*** 非常好看: weibo app 首页
*** 非常好看: weibo app 比赛页
*** DONE 游泳: 蝶泳800米
*** 非常好看: fix bug
**** 上传图片仅限于8张	增加“继续添加”或“继续上传”按钮
**** 上传图片结束后，直接进入比赛详情展示	应继续进行“添加赞助商和奖品”的操作
**** 创建赞助商比赛113,114，116等，在手机端UGC部分显示	赞助商比赛应在手机端赞助商栏显示
**** 赞助管理，查询赞助	添加赞助--按钮无反应	无法添加赞助，请协助解决
**** 赞助商管理，添加赞助商	增加赞助商--按钮无反应	无法添加赞助商，请协助解决
**** 用户管理,  查询用户	只能按照用户全名精确搜索，无法按关键词搜索。用户名为“中国”，搜索中或国字，搜索不到
**** 举报管理，查询举报
** 09-04
*** Gstar: UI实现
*** Dun: 加上licenses
*** DONE 游泳:  蝶泳800米
*** 非常好看: 参赛图片显示算法
*** 非常好看: weibo app 比赛页
**** TODO 计算heat
***** DONE 设计合适的数据结构, round, group, heat
***** TODO 图片不超过448张时, 实现round, group, heat
***** 图片超过448张时, 实现round, group, heat
***** 获取heat的过程: contest -> round -> group -> heat
**** pk
**** 开奖日历
** 09-05
*** DONE Dun: 加上license
*** DONE 非常好看: heat算法讨论会议
*** DONE 非常好看: heat生成机制设计图
*** DONE 非常好看: heat获取机制设计图
*** DONE 非常好看: heat生成和获取的伪代码实现
*** DONE 非常好看: 整理一篇heat的文档
*** DONE 游泳: 自由泳500米, 蝶泳200米
*** 非常好看: weibo app比赛页面
**** 计算heat
**** pk
**** 开奖日历
*** TODO Gstar: UI实现
** 09-06
*** TODO 非常好看: heat计算
**** DONE 比赛图片分组
**** DONE 测试图片分组是否正确
**** 生成heat
*** Gstar: UI实现
*** DONE 游泳: 500米自由泳
*** DONE 游泳: 300米蝶泳
*** 博客: Rack编程
*** Ground: 加入并发支持, celluloid
*** Ground: 添加license
** 09-07
*** DONE Gstar: UI实现
*** Gstar: 抓取github标星的项目
*** Gstar: 为star设计合适的全文检索索引
*** DONE 游泳: 500米自由泳
*** DONE 游泳: 300米蝶泳
*** 读书: Rack编程
*** 博客: Rack编程
*** Ground: 添加license
** 09-08
*** 读书: Rack编程
*** Gstar: 抓取github项目
*** Gstar: 全文搜索
*** DONE 游泳: 500米自由泳, 200米蝶泳
** 09-09
*** 非常好看
**** DONE 生成heat
**** DONE round关闭算法
**** DONE group关闭算法
**** TODO 自动计算stop_up_entity_point和finals_point
**** 定位heat
*** DONE 吃素
*** DONE 自由泳500米
**** TODO 自动计算stop_up_entity_point和finals_point
** 09-10
*** DONE 自由泳500米
*** 非常好看
**** 增加一个获取首页比赛接口
**** DONE 自动计算stop_up_entity_point和finals_point
**** DONE 关闭一个组时应该淘汰75%的entities
**** TODO fix bug
***** DONE 已经结束的比赛不应该出现在首页
***** 比赛浏览数不显示，一直为0
***** 用户比赛无奖品
***** 结果页和我的投票结果不符合
***** 分享链接太长
***** 找不到我刚刚创建的比赛
***** bug工单上的bug
****** DONE 注册--已经注册过的手机号 都能收到验证码 注册成功
****** DONE 注册--输入错误的 验证码 输入错误时 也能注册成功
****** 查看比赛--我 投票的 比赛 无任何数据
**** 建立一套用于测试heat算法的rake任务
**** 获取heat
*** 彩票追号: 增加一个人工补漏追的链接
*** Gstar: 从github拉项目
*** Gstar: 按标题，描述搜索项目
** 09-11
*** DONE 自由泳500米
*** 非常好看
**** DONE 增加一个获取首页比赛接口，比赛在服务端分好类后发给客户端，比赛可以通过用户创建和后台创建两类型进行过滤
**** fix bug
***** DONE 比赛浏览数不显示，一直为0
***** DONE 传统比赛投票报500错误
***** DONE 显示图片的投票数
***** 用户比赛无奖品
***** 结果页和我的投票结果不符合
***** 分享链接太长
***** 找不到我刚刚创建的比赛
***** bug工单上的bug
****** DONE 查看比赛--我 投票的 比赛 无任何数据
****** DONE #26761 比赛分数出现负数
**** 建立一套用于测试heat算法的rake任务
**** 获取heat
*** Gstar: 从github拉项目
*** Gstar: 按标题，描述搜索项目
*** 彩票追号: 增加一个人工补漏追的链接
** 09-12
*** DONE 自由泳500米
*** 非常好看
**** fix bug
***** DONE #26756 右侧栏--消息 不能删除
***** DONE #26763 个人资料--感情状态修改完成后 提交后 还是未修改
***** DONE #26787 显示各个类别的比赛数量
***** DONE #26778 评论--评论列表头像不正确
***** DONE #26741 比赛主页--排行榜 给力投票 投完后票数没有改变
***** DONE #26706 左侧栏--个人主页 投票数显示为0时还能继续比赛投票
***** DONE #26740 比赛主页--获奖名单 无显示
***** DONE #26792 投票结果页面---图片左上方的两个数字应该分别代表“我的排名”和“所有排名”实际序号
***** TODO #26735 右侧栏--抽奖查询 无数据
***** #26790 用户比赛--无奖品展示，无参加抽奖、中奖结果等
***** 分享链接太长
***** 用户比赛无奖品
***** 找不到我刚刚创建的比赛
**** 建立一套用于测试heat算法的rake任务
**** 获取heat
*** Gstar: 从github拉项目
*** Gstar: 按标题，描述搜索项目
*** 彩票追号: 增加一个人工补漏追的链接
** 09-13
*** 非常好看
**** DONE 奖池算法
**** TODO 抽奖算法
**** 通过heat向客户端提供图片
**** fix bug
***** #26735 右侧栏--抽奖查询 无数据
***** #26790 用户比赛--无奖品展示，无参加抽奖、中奖结果等
***** 分享链接太长
***** 用户比赛无奖品
***** 找不到我刚刚创建的比赛
**** 建立一套用于测试heat算法的rake任务
**** 获取heat
*** DONE 下班前花15钟进行一次code review
*** 自由泳500米
*** Gstar: 从github拉项目
*** Gstar: 按标题，描述搜索项目
*** 彩票追号: 增加一个人工补漏追的链接
** 09-14
*** DONE 自由泳500米
** 09-15
*** DONE 给家里打钱
*** DONE 自由泳500米
*** Gstar: 详细描写Gstar的功能，用法
*** Gstar: 从github拉项目
*** Gstar: 按标题，描述搜索项目
** 09-16
*** 非常好看
**** TODO 抽奖算法
**** 通过heat向客户端提供图片
**** fix bug
***** #26735 右侧栏--抽奖查询 无数据
***** #26790 用户比赛--无奖品展示，无参加抽奖、中奖结果等
***** 分享链接太长
***** 用户比赛无奖品
***** 找不到我刚刚创建的比赛
**** 建立一套用于测试heat算法的rake任务
**** 获取heat
**** Code Review
**** 积分扣除机制
*** DONE 检查快频彩追号任务
*** DONE 检查快频彩追号任务
*** 自由泳500米
*** Gstar: 从github拉项目
*** Gstar: 按标题，描述搜索项目
** 09-17
*** 非常好看
**** DONE 抽奖算法
**** TODO UGC赞助
**** 提供heat接口
**** DIY比赛上传多张图片
*** 自由泳500米
*** 追号:   手动追号链接
*** Gstar: 详细描写Gstar的功能，用法
*** Gstar: 从github拉项目
*** Gstar: 按标题，描述搜索项目
** 09-18
*** 非常好看
**** DONE code review
**** 使用whenever运行后台任务
**** 获得heat接口
**** heat重玩接口
**** heat下一轮接口
**** UGC赞助
**** DIY比赛上传多张图片
*** DONE 自由泳500米
*** 追号:   手动追号链接
*** Gstar: SearchStars service
** 09-19
*** DONE 开发GStar
*** 搬家
*** DONE 自由泳500米
*** 阅读rack编程
** 09-20
*** DONE 开发Gstar
*** DONE 搬家
*** DONE 拉宽带
*** DONE 自由泳500米
** 09-21
*** 开发Gstar
**** TODO 可编辑description
**** 对name, description和readme进行全文检索
*** DONE 自由泳1000米
** 09-22
*** 开发Gstar
**** DONE 对name, description和readme进行全文检索
**** DONE 只同步最新的starred projects
**** DONE 优化搜索策略
**** DONE 支持中文
**** 搜索结果分页
**** 可编辑description
*** DONE 自由泳500米
** 09-23
*** 非常好看
**** DONE 使用whenever运行后台任务
**** TODO 获得heat接口
**** heat重玩接口
**** heat下一轮接口
**** UGC赞助
**** DIY比赛上传多张图片
*** DONE 自由泳500米
*** Gstar
**** DONE 定时更新starred projects
**** 增量索引
- 建立一个表,记录需要重建索引的star
- 建立增量索引的task每1分钟轮询一次此表，在此表中删除已经重建索引的star记录
**** 定时建立增量索引
**** 高亮匹配
**** 动态索引
** 09-24
*** 非常好看
**** DONE 获得heat接口
**** heat重玩接口
**** heat下一轮接口
**** UGC赞助
**** DIY比赛上传多张图片
*** DONE 彩票追号: 手动追号链接
*** DONE 彩票追号: 手动漏追报警
*** DONE 彩票追号: 加入delayed_job支持
*** 自由泳500米
*** Gstar
**** DONE 定时更新starred projects
**** DONE 增量索引
- 建立一个表,记录需要重建索引的star
- 建立增量索引的task每1分钟轮询一次此表，在此表中删除已经重建索引的star记录
**** 定时建立增量索引
**** 高亮匹配
**** 动态索引
** 09-25
*** TODO Gstar: 可编辑description
*** Gstar: 语言匹配给予高优先级
*** Gstar: 表索引
*** Gstar: 搜索结果分页
*** DONE 自由泳1000米
*** DONE 阅读: http://docs.angularjs.org/guide/directive
** 09-26
*** 非常好看
**** DONE 获得heat接口
**** DONE heat重玩接口
**** DONE 后台集成rails admin
**** DONE 后台表记录的sn不可以修
**** 删除过期heat的定时任务
**** 后台DIY比赛创建流程
**** 后台UGC比赛添加赞助
**** 后台DIY比赛上传多张图片
*** TODO Gstar: 可编辑description
*** Gstar: 语言匹配给予高优先级
*** Gstar: 表索引
*** Gstar: 搜索结果分页
*** DONE 自由泳1000米
** 09-27
*** 非常好看
**** 后台DIY比赛创建流程
**** 后台UGC比赛添加赞助
**** 后台DIY比赛上传多张图片
**** 删除过期heat的定时任务
*** DONE Gstar: 表索引
**** stars(:source_id, :name, :description)
**** reindex_stars(:status)
**** q_star_assocs(:q, :star_id, :score, [:q, :star_id])
**** dic_stars(:star_id, :dic_id)
**** dics(:word)
*** DONE Gstar: fix bug, 使用image搜索不到包含Image的项目
*** DONE Gstar: 可编辑description
*** Gstar: 语言匹配给予高优先级
*** Gstar: 搜索结果分页
*** 自由泳1000米
** 09-28
*** DONE Gstar: 匹配高亮
*** Gstar: 搜索结果分页
*** Gstar: 写使用文档
*** DONE 自由泳1000米
** 09-29
*** 非常好看
**** TODO 后台:DIY创建比赛
**** 后台:UGC添加赞助
*** DONE 自由泳1000米
*** DONE Gstar: fix bug 编辑description后没有立即显示更新后的内容
*** TODO Gstar: 搜索结果分页
*** Gstar: 写使用文档
** 09-30
**** 后台: UGC添加赞助
*** DONE 自由泳1000米
*** Gstar: 搜索结果分页
*** Gstar: 写使用手册
** 10-01
*** DONE 自由泳1000米
*** DONE Gstar: 搜索结果分页
**** DONE 告诉客户端一共有多少页, 每页有多少条数据
**** DONE 是否是当前页
**** DONE pre和next的link
**** DONE 分页的样式
*** Gstar: 写使用手册
*** DONE 自由泳1500米
** 10-02
*** DONE 自由泳1000米
*** Gstar: 使用手册
** 10-03
*** DONE 自由泳1000米
*** DONE Gstar: 搜索输入框弄大点
*** DONE Gstar: 使用手册
*** DONE Gstar: 在ubuntu下进行测试
*** DONE Gstar: 介绍可以在哪里获得github的access_token
*** Gstar: 发布v1.0
** 10-04
*** DONE 游泳: 2000米
*** DONE Gstar: ubuntu下定时任务有encode错误
*** DONE Gstar: 搜索结果莫名的不准确
** 10-05
*** DONE 游泳2000米
*** Description
**** 图形化模型 
**** 图形化模型之间的关系
** 10-06
*** DONE 游泳3000米
** 10-07
*** DONE 游泳3000米
*** Description
**** 图形化模型 
**** 图形化模型之间的关系
** 10-08
*** DONE 处理双色球漏追
*** DONE 非常好看: weibo app jsonp 接口
*** DONE 游泳: 2000米
** 10-09
*** 非常好看
**** DONE weibo-app: 给前端一个user_sn用于测试
**** DONE weibo-app: 首页获奖名单
**** DONE weibo-app: 首页推荐比赛
**** weibo-app: 获取比赛类别
**** DONE prizePool接口500
*** 新浪微博站内应用开发文档 http://open.weibo.com/wiki/站内应用
*** Gstar: 了解下Alfred插件
- http://www.makeuseof.com/tag/how-to-create-workflow-system-alfred-2-0-mac/
- http://www.boyvanamstel.nl/2013/08/creating-an-alfred-2-workflow-with-ruby/
*** DONE 游泳: 2000米
** 10-10
*** 非常好看
**** DONE weibo-app: 获取比赛类别
**** DONE weibo-app: 调试获取heat接口
**** DONE 新后台: FontAwesome无法显示
- 解决方法是将无用的css文件删除，然后运行rake assets:precompile RAILS_ENV=staging，正常运行
- 或者可以试试设置config.assets.compile = true,在staging.rb文件中默认config.assets.compile = false
**** weibo-app: 比赛分享次数
**** 新后台: 给UGC比赛添加赞助
**** 新后台: DIY比赛上传图片
**** 新后台: 用户权限管理
*** DONE 游泳: 1000米，练习打腿500次
*** rails-guide复习: The Asset Pipeline
- http://guides.rubyonrails.org/asset_pipeline.html

** 10-11
*** 非常好看
**** weibo-app: 调试比赛创建 14:00
**** weibo-app: 个人中心
**** 手机客户端: 调试heat create流程
**** DONE 新后台: 给UGC比赛添加赞助
**** TODO weibo-app: 给测试用比赛生成round
**** weibo-app: 提供中奖名单以供测试
**** 新后台: 添加奖品
**** 新后台: DIY比赛上传图片
**** 新后台: 用户权限管理
*** rails-guide复习: The Asset Pipeline
- http://guides.rubyonrails.org/asset_pipeline.html
*** 彩票追号
**** DONE 处理漏追
**** DONE 对于timeout之类的异常，增加重试机制
**** 投注错误的彩票，统一抛异常，造成追号漏追，而不是追号失败，这样所有异常彩票都可以通过补追手段弥补
*** DONE 游泳: 2000米
** 10-12
*** 非常好看
**** DONE weibo-app: 给测试用比赛生成round
**** weibo-app: 调试比赛流程
**** weibo-app: 获取最近分享接口
**** weibo-app: 记录分享接口
**** weibo-app: 比赛流程创建奖品，让用户能够选择奖品
**** weibo-app: 提供中奖名单以供测试
**** weibo-app: 猜你喜欢的比赛(赞助商推荐比赛)
**** weibo-app: 某个比赛中最近抽奖用户
**** weibo-app: 调试比赛创建
**** weibo-app: 个人中心
**** DONE weibo-app: create heat提供jsonp接口
**** DONE 新后台: 添加奖品
**** 新后台: DIY比赛上传图片
**** 新后台: 用户权限管理
**** DONE code review
*** rails-guide复习: The Asset Pipeline
- http://guides.rubyonrails.org/asset_pipeline.html
*** DONE 游泳: 2000米
** 10-13
*** DONE 给家里寄钱
*** DONE 存钱
*** DONE 看房
*** DONE 游泳2000米
*** Description: 图形化模型之间的关系
** 10-14
*** 非常好看
**** DONE weibo-app: 抽奖池100%出现，供前端测试
**** DONE weibo-app: 比赛流程创建奖品，让用户能够选择奖品
**** DONE weibo-app: 记录分享接口
**** DONE weibo-app: 某个比赛中最近抽奖用户，用户去重
**** TODO weibo-app: 幸运抽奖，返回用户的抽奖日期
**** weibo-app: 获取最近分享接口
**** weibo-app: 调试比赛流程
**** weibo-app: 提供中奖名单以供测试
**** weibo-app: 猜你喜欢的比赛(赞助商推荐比赛)
**** weibo-app: 调试比赛创建
**** weibo-app: 个人中心
**** weibo-app: 比赛主排名(比如第一轮排名，第二轮排名，第三轮排名)
**** 新后台: DIY比赛上传图片
**** 新后台: 用户权限管理
**** code review
*** rails-guide复习: The Asset Pipeline
- http://guides.rubyonrails.org/asset_pipeline.html
*** DONE 游泳: 2000米
** 10-15
*** 非常好看
**** DONE weibo-app: 猜你喜欢的比赛(赞助商推荐比赛)
**** DONE weibo-app: 幸运抽奖，返回用户的抽奖日期
**** weibo-app: 个人中心
***** 中奖查询
****** 抽奖信息
****** 中奖信息
***** 我的相册
***** 我的比赛
***** 朋友比赛
***** 购买积分
***** 兑换投票
***** 系统消息
**** weibo-app: 获取最近分享接口
**** weibo-app: 调试比赛流程
**** weibo-app: 提供中奖名单以供测试
**** weibo-app: 调试比赛创建
**** weibo-app: 比赛主排名(比如第一轮排名，第二轮排名，第三轮排名)
**** 新后台: DIY比赛上传图片
**** 新后台: 用户权限管理
**** code review
*** rails-guide复习: The Asset Pipeline
- http://guides.rubyonrails.org/asset_pipeline.html
*** 游泳: 2000米
