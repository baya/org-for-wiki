* JavaScript
** 学习网站
- w3scholls: http://www.w3schools.com/js/default.asp
** underscore.js
http://underscorejs.org

** 图形
jgraph: http://jsplumb.org
orxy:  http://code.google.com/p/oryx-editor/
sigma: http://sigmajs.org
Envision.js: http://www.humblesoftware.com/
Morris.js: https://github.com/oesmith/morris.js
Paper.js http://paperjs.org
Processing.js 
Raphael.js http://raphaeljs.com
** 业务处理
BPMN
bpmai.org: http://bpmai.org
ProcessOn: http://www.processon.com
** 3D
*** three.js
https://github.com/mrdoob/three.js
http://learningthreejs.com

*** cannon.js
http://schteppe.github.com/cannon.js/
https://github.com/schteppe/cannon.js
** 图表
** 数学
MathBox.js: https://github.com/unconed/MathBox.js
** Office
spreadJS: http://wijmo.com/docs/spreadjs/webframe.html
http://wijmo.com/demo/spreadjs/samples/
http://wijmo.com/demo/spreadjs/samples/?widget=CellSpan&sample=CellSpan
http://wijmo.com

simple Spreadsheet: http://www.simple-groupware.de/cms/Spreadsheet/Home
** MooTools
MooTools: http://mootools.net
** 流程图
wireit: https://github.com/neyric/wireit

LearnGitBranching: https://github.com/pcottle/learnGitBranching

** YUI
http://yuilibrary.com/yui/quick-start/
** 技术社区
- 葡萄城: http://gcdn.grapecity.com
- jsdo.it: http://jsdo.it
- 学习jQuery: http://learn.jquery.com/
- angularjs.cn http://www.angularjs.cn/
** knockoutjs
http://knockoutjs.com
** Data
d3.js: http://d3js.org

** 动画
collie: http://jindo.dev.naver.com/collie/

http://datacommunitydc.org

** 基础知识
*** 布尔值为false的类型
- null
- undefined
- 0, NaN
- ""
- false

*** Prototypes
** 书籍
- http://www.ppurl.com/2012/06/javascript-fifth-edition.html
** 技术文章
A Plain English Guide to JavaScript Prototypes
http://sporto.github.com/blog/2013/02/22/a-plain-english-guide-to-javascript-prototypes/?utm_source=javascriptweekly&utm_medium=email

** 流程图
- https://github.com/bramp/js-sequence-diagrams
** angularjs.cn
- http://www.angularjs.cn/
- http://cnodejs.org/
** 即时编辑插件
- http://www.appelsiini.net/projects/jeditable

** 自己写的js代码
- 经常用
- 不很长
- 易移植
*** 表单参数验证
- https://gist.github.com/baya/6387182
  
** 快捷var声明
var addEvent = 'addEventListener',
  	    type = 'gesturestart',
  	    qsa = 'querySelectorAll',
  	    scales = [1, 1],
  	    meta = qsa in doc ? doc[qsa]('meta[name=viewport]') : [];
** 好玩的网站
- http://codepen.io/
** Documentation
- https://developer.mozilla.org/en-US/docs/Web/JavaScript?redirectlocale=en-US&redirectslug=JavaScript

** 前端框架
- http://ruby-china.org/topics/14415
- http://codebrief.com/2012/01/the-top-10-javascript-mvc-frameworks-reviewed/
1. Backbone.js
2. SproutCore 1.x
3. Sammy.js
4. Spine.js
5. Cappuccino
6. Knockout.js
7. Javascript MVC
8. Google Web Toolkit
9. Google Closure
10. Ember.js
11. Angular.js
12. Batman.js

** Pattern
*** module pattern
- http://yahooeng.tumblr.com/post/62383009835/javascript-modules-amd-and-the-road-ahead
var SpriteFactory = (function () {
    "use strict";
    var index = 0,
        sprites = {},
        Sprite = function (config) {
            return {
                index: index++,
                x: config.x || 0,
                y: config.y || 0,
                width: config.width || 0,
                height: config.height || 0,
                background: config.background || '#fff'
            };
        };

    return {
        generateSprite: function (config) {
            config = config || {};
            var s = new Sprite(config);
            sprites['sprite_' + s.index] = s;
        },
        deleteSprite: function (index) {
            var sprite = this.getSprite(index);
            if (sprite) { sprite = null; }
        },
        getSprite: function (index) {
            if (sprites.hasOwnProperty('sprite_' + index)) {
                return sprites['sprite_' + index];
            }
        }
    };
}());

SpriteFactory.generateSprite({});
SpriteFactory.generateSprite({
    x: 90,
    y: 20
});

theSprite = SpriteFactory.getSprite(1);

** unicode
- http://www.2ality.com/2013/09/javascript-unicode.html
** emoji
- http://apps.timwhitlock.info/emoji/tables/unicode

** Regular Exp
- https://developer.mozilla.org/en/docs/Web/JavaScript/Guide/Regular_Expressions
- https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp
** convert float to an int
- 参考: http://stackoverflow.com/questions/596467/how-do-i-convert-a-float-to-an-int-in-javascript
var intvalue = Math.floor( floatvalue );
var intvalue = Math.ceil( floatvalue ); 
var intvalue = Math.round( floatvalue );
~~2.9 #=> 2
** jsonp
*** 资源
- http://json-p.org/

** DRY技术
*** 复用其他对象的方法

var ContestForm = {
    
    form_methods: ['POST', 'GET'],
    
    init: function(data){
	this.path = data.path;
	this.btn  = data.btn;
	this.form = data.form;
	this.method = data.method.toUpperCase();
	return this;
    }
}


// ContestPreview.init({
//   path: "/contest/preview",
//   btn: $btn,
//   form: $form,
//   method: 'POST'
// }).call();
var ContestPreview = {

    form_methods: ContestForm.form_methods,

    init: ContestForm.init,

    call: function(){
	var $form = this.form,
	path = this.path,
	method = this.method,
	form_methods = this.form_methods,
	scope = this;
	
	this.btn.bind('click', function(event){
	    event.preventDefault();
	    $form.attr('action', path);
	    if (form_methods.indexOf(method) != -1)
	    {
		$form.attr('method', method);
	    } else if (method) {
		$form.append(scope.buildExtraFormMethod())
	    }
	    $form.submit();
	})
    },

    buildExtraFormMethod: function(){
	return "<input name=\"_method\" type=\"hidden\" value=\"" + this.method + "\" />";
    }

};


var ContestConfirm = {

    form_methods: ContestForm.form_methods,

    init: ContestForm.init,

    call: function(){
	console.dir(data);
    }
};    

** extend
参考: http://www.crossyou.cn/javascript-extend-collected-in-several-versions-of-custom-functions.htm
1.
function extend(destination, source) {
    var value	 = null;
    var property = null;
    if (destination && source) {
        for (property in source) {
            value = source[property];
            if (value !== undefined) {
                destination[property] = value;
            }
        }
        if (source.hasOwnProperty && source.hasOwnProperty('toString')) {
            destination.toString = source.toString;
        }
    }
    return destination;
}

2.
function extend(destination, source){
    var value 	 = null;
    var property = null;
    if (destination && source) {
	    for (property in source) {
		   value = source[property];
		   if (value !== undefined) {
			   destination[property] = (typeof(value) == 'object' && !(value.nodeType) && !(value instanceof Array)) ? extend({}, value) : value;
		   }
	    }
	    if (source.hasOwnProperty && source.hasOwnProperty('toString')) {
	    	destination.toString = source.toString;
	    }
    }
    return destination;
}  

3.
function extend(destination, source) {
    var value	 = null;
    var property = null;
    if (destination && source) {
        for (property in source) {
            value = source[property];
            if (value !== undefined) {
                destination[property] = value;
            }
        }
        var sourceIsEvt = typeof window.Event == "function" && source instanceof window.Event;
        if (!sourceIsEvt && source.hasOwnProperty && source.hasOwnProperty('toString')) {
            destination.toString = source.toString;
        }
    }
    return destination;
}

** string convert to integer
var a = parseInt("10");   
