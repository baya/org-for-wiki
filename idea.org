* Idea
记录自己的一些想法和灵感
** DONE Description: migration-doc  
- 项目地址: https://github.com/baya/description
- 从migration脚本中提取数据库文档
** DONE Gstar
- 项目地址: https://github.com/baya/Gstar
- 对github上标过星号的项目进行标签标记，以便于自己能够搜索到合适的代码
- github api http://developer.github.com/
** DONE 写一篇介绍dsl的博客
将你所面对的问题域抽象化为一个类
*** 题目暂定为: 一步一步dsl
** DONE 博客: 理解Asset pipeline和实践
- 参考: http://railsapps.github.io/rails-javascript-include-external.html

** DONE rails-guide复习: The Asset Pipeline
- http://guides.rubyonrails.org/asset_pipeline.html

** 写书: 百分之二十的Rails
*** 参考: http://ihower.tw/rails3/
** 学习W3School教程: HTML/CSS http://www.w3school.com.cn/h.asp
** 学习W3School教程: JavaScript http://www.w3school.com.cn/b.asp   
** 博客: spring你这么叼，坛子里的人都知道吗?
每次我使用spring，生成controller, model，migration时，或者运行测试时，我都会被感动一次
spring rails g migration add_sponsor_logo_to_prizes，由于被感动的次数太多，所以我
不得不去研究一下spring到底为何这么有用。
** 写一个应用iCheck
打卡: 跑步打卡，游泳打卡等各种打卡，帮助你养成好习惯，需要收费的哦   
** 完善ground文档
** 使用ground写一个论坛
** ground发布1.0版本
** 研究gem
- 比如研究bundler，然后写几篇相关的博客，和一个简化的bundler
*** sprockets
**** 熟悉代码
**** 写相关博客
**** 做试验
**** 写一个简化版本的sprockets
*** bundler
*** rake
*** devise
*** sinatra
*** rails
** 写一篇介绍session和cookie的博客
** docX: 制作一款文档收集工具类似于dash
- 基于浏览器
- 用户可以自己写插件，收集管理相应的文档
- http://doks.io/#/api
** 将第三方登录写成一个rack中间件
** 第三方支付是否可以写成一个rack中间件
** 写一篇介绍rack的博客
- 龙虾
- Rack::Builder
- rack应用的图解
- 怎么使用rack构造大型复杂应用
** 研究brew的源代码
** 使用ground + angularJS写一个通用的web后台
*** 参考
- http://jsfiddle.net/SAWsA/11/
** Charge
- 帮助人们记帐
- 集成自己的记帐语言

** 可以了解下的东西
- 自然语言处理 Natural Language Processing
- 机器翻译 Machine Translation
- 信息提取 Information Extraction
- 问答系统 Question Answering
- 自动/机器学习 Machine Learning
- 语音识别 Speech Recognition
- 你独立构建或训练过一个NLP或机器学习相关的系统, 并基于此系统做过许多数据驱动的实验
- max-entropy classifier
- k-means clustering
- EM algorithm
- forward-backward algorithm
- CYK parsing
- Earley algorithm
- Hiero

** DONE 生成review diff文件的脚本
namespace :git do
  task :diff do
    tt = Time.now
    yt = Time.now - (60 * 60 * 24)
    ys = "\"#{yt.strftime('%F')} 23:59:59\""
    ts = tt.strftime('%Y%m%d')
    log = `git log --until=#{ys} -1`
    commit = log.split("\n")[0].split(' ')[1]
    diff = `git diff #{commit}`
    puts diff
    File.open("code_review_#{ts}.diff", 'w+') {|f| f.write diff }
  end
end
执行 rake git:diff就能对今天的代码进行review了
    
** 用程序模拟下红眼，蓝眼问题
- http://www.zhihu.com/question/21262930

** 基于git的个人项目管理工具，即PPM工具(Personal Project Manager)
gitppm
